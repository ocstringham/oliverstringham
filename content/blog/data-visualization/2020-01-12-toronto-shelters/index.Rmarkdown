---
title: "Toronto Homeless Shelters [Data Visualization]"
author: Oliver C. Stringham
date: '2020-01-12'
slug: 'toronto-homeless-shelters-data-visualization'
categories: [data-visualization, tidy-tuesday, r, gis]
tags: [r, tidy-tuesday, geocode, leaflet]
summary: "The #TidyTuesday data of the week come from #OpenDataToronto on homeless shelters in Toronto and their occupancy from 2017 - 2019. I took a try at web map with help from #rstats and Leafletjs."
---

The #TidyTuesday data of the week come from #OpenDataToronto on homeless shelters in Toronto and their occupancy from 2017 - 2019. I took a try at web map with help from #rstats and [Leafletjs](https://rstudio.github.io/leaflet/).


```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(leaflet)
if (file.exists('toronto-map.rds')) {
  readRDS('toronto-map.rds')
} else {
  "The item does not exist yet."
}
```


```{r setup, include=FALSE}
# knitr::opts_chunk$set(echo = TRUE)

library(dplyr)
library(stringr)
library(tidygeocoder)
library(lubridate)
library(leaflet)


# load in data
df = readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-01/shelters.csv')


# get # of unique shelters & add unique ID
shelters = 
  df %>% 
  select(shelter_name, shelter_address, shelter_city, shelter_postal_code, shelter_province) %>% 
  distinct() %>% 
  arrange(shelter_name) %>% 
  mutate(shelter_id = row_number())


# add back in shelter id & Parse date to time time
df2 = df %>% left_join(shelters) %>% 
  mutate(date = as.POSIXct(occupancy_date))


# names and addresses
shelter_addrs =
  shelters %>%
  group_by(shelter_name, shelter_id) %>%
  summarise(address = paste0(shelter_address, ", ", shelter_city, " ",
                             # shelter_postal_code, 
                             ", ", shelter_province))

# get lat and longs via tidygeocoder::geocode
# geocode_temp =
#   shelter_addrs %>%
#   geocode(address, method = 'osm', lat = latitude , long = longitude)
# 
# # save so don't have to run later
# saveRDS(geocode_temp, "geocode_temp.rds")
geocode_temp = readRDS("geocode_temp.rds")


## add in names and IDs
lat_long = 
  geocode_temp %>% 
  left_join(shelter_addrs, by = 'shelter_name') %>% 
  rename(shelter_id = shelter_id.x) %>% 
  distinct(shelter_id, .keep_all = TRUE)


# average occupancy by week
sum2 = 
  df2 %>% 
  mutate(# day = day(date),
         week = week(date),
         month = month(date),
         year = year(date)) %>% 
  arrange(shelter_id, date) %>% 
  group_by(shelter_id, year, week) %>% 
  summarise(occupancy = sum(occupancy, na.rm = TRUE), 
            capacity = sum(capacity, na.rm = TRUE), 
            n = n()) %>% 
  ungroup() %>% 
  mutate(date = as.Date(paste(year, week, "01", sep = '-'), "%Y-%U-%u"),
         perc_occ = occupancy/capacity)



# leaflet map

## summarize for all weeks, create label for map
## also remove rows with no lat/long or occupancy data
sum3 = 
  sum2 %>% 
  group_by(shelter_id) %>% 
  summarise(avg_occ = mean(occupancy, na.rm = TRUE) %>% round(0),
            perc_occ = mean(perc_occ, na.rm = TRUE) %>% round(2) * 100) %>% 
  left_join(lat_long) %>% 
  
  filter(!is.na(latitude), avg_occ != 0) %>% 
  
  mutate(label = paste(paste0("<b style='color:blue'>", shelter_name, "</b>"), 
                       # address, 
                       paste0("Average weekly Occupancy: ", avg_occ),
                       paste0("Average weekly Percent Maximum Capacity: ", perc_occ,  "%"),
                       sep = '<br/>'))

## create color palette for map
pal <- colorBin(
  palette = colorRampPalette(c('orange','red' ))(length(sum3$avg_occ)), 
  domain = sum3$avg_occ, bins = 3)


# create map
map = 
  leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addCircleMarkers(data = sum3, ~longitude, ~latitude, 
                   color = ~pal(avg_occ),
                   radius = ~avg_occ/200, #~perc_occ/10, #~avg_occ/200,
                   label = ~shelter_name, popup = ~ label) %>% 
  addProviderTiles(providers$CartoDB.Positron) %>%
  addLegend("bottomright", 
            pal = pal, 
            values = (sum3$avg_occ),
            title = "Weekly\nAverage\nOccupancy",
            # labFormat = labelFormat(prefix = "$"),
            opacity = 1) 


# map

# save to access in beginning of blog post
saveRDS(map, 'toronto-map.rds')

```




